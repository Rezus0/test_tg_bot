import random
import telebot
from telebot import types


bot = telebot.TeleBot("##############")  # —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞


@bot.message_handler(commands=['start'])  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
def start_command(message):
    bot.send_message(message.from_user.id, greetings)


@bot.message_handler(commands=['help'])  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
def help_command(message):
    bot.send_message(message.from_user.id, helptext + "\n\n" + helptext2 + "\n\n" + helptext3 + "\n\n" + helptext4)


@bot.message_handler(commands=['reg'])  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /reg
def registration(message):
    bot.send_message(message.from_user.id, "–í–∞—à–µ –∏–º—è:")
    bot.register_next_step_handler(message, get_name)


@bot.message_handler(commands=['documents'])  # –≤—ã–≤–æ–¥ URL-–∫–Ω–æ–ø–∫–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–∞—á–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ + –≤—ã–≤–æ–¥ –∫–∞—Ä—Ç–∏–Ω–∫–∏
def documents(message):
    markup = types.InlineKeyboardMarkup()
    docs_button = types.InlineKeyboardButton(text="–ö–∞–∫ –ø–æ–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã", url="https://rut-miit.ru/admissions"
                                                                              "/office/48052")
    markup.add(docs_button)
    bot.send_photo(message.from_user.id, open("files/documents.png", "rb"), "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ "
                                                                            "–ø–æ–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –†–£–¢(–ú–ò–ò–¢)",
                   reply_markup=markup)


@bot.message_handler(commands=['account'])  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /account
def account(message):
    if name != "" and surname != "" and surname != "" and age != 0:
        if age % 10 == 1 and age % 100 != 11:
            bot.send_message(message.from_user.id, surname + " " + name + " " + middlename + ".\n" + str(age) + " –≥–æ–¥.")
        elif (age % 10 == 2 or age % 10 == 3 or age % 10 == 4) and age % 100 != 12 and age % 100 != 13 and age % 100 \
                != 14:
            bot.send_message(message.from_user.id,
                             surname + " " + name + " " + middlename + ".\n" + str(age) + " –≥–æ–¥–∞.")
        else:
            bot.send_message(message.from_user.id, surname + " " + name + " " + middlename + ".\n" + str(age) + " –ª–µ—Ç.")
    else:
        bot.send_message(message.from_user.id, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /reg")


@bot.message_handler(commands=['sticker'])  # —Å–æ–∑–¥–∞–Ω–∏–µ callback-–∫–Ω–æ–ø–æ–∫
def sticker_sender(message):
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.row(
        telebot.types.InlineKeyboardButton("–í–µ—Å–µ–ª—ã–µüòÄ", callback_data="funny")
    )
    keyboard.row(
        telebot.types.InlineKeyboardButton("–ì—Ä—É—Å—Ç–Ω—ã–µ‚òπÔ∏è", callback_data="sad")
    )
    bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏ –∏–∑ –∫–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∏–∫–µ—Ä", reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)  # —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ callback-–∫–Ω–æ–ø–∫–∏ (–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∏–∫–µ—Ä–æ–≤)
def callback(query):
    data = query.data
    bot.edit_message_reply_markup(query.from_user.id, query.message.message_id)
    if data == "funny":
        bot.send_sticker(query.from_user.id, random.choice(funnystickers))
    elif data == "sad":
        bot.send_sticker(query.from_user.id, random.choice(sadstickers))


@bot.message_handler(content_types="text")  # —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–π
def get_text_messages(message):
    if message.text.lower() == "–ø—Ä–∏–≤–µ—Ç":
        bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?")
    elif message.text.lower() == "–∫–∞–∫ –ø–æ–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã?":
        documents(message)
    else:
        bot.send_message(message.from_user.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ —É—á—É —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–πüòû" + "\n" +
                         "–ò—Å–ø–æ–ª—å–∑—É–π /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é.")


greetings = "–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, –¥–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π, –Ω–æ —Å–∫–æ—Ä–æ —Ç—É—Ç –±—É–¥–µ—Ç –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ, " \
            "–∏—Å–ø–æ–ª—å–∑—É–π /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ –±–æ—Ç —É–º–µ–µ—Ç."
helptext = "–•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Å—Ç–∏–∫–µ—Ä –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ—Ä–≥–æ—Ä–∏–∏? –ò—Å–ø–æ–ª—å–∑—É–π /sticker"
helptext2 = "–•–æ—á–µ—à—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è? –ò—Å–ø–æ–ª—å–∑—É–π /reg"
helptext3 = "–£–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω? –ü–æ–ª—É—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π /account"
helptext4 = "–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –ø–æ–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –†–£–¢(–ú–ò–ò–¢)? –ò—Å–ø–æ–ª—å–∑—É–π /documents"
name = ""
surname = ""
middlename = ""
age = 0
funnystickers = ["CAACAgIAAxkBAAEDP1hhis_cjI09T0OFsijv-fTPD-R8xwACFgADwDZPE2Ah1y2iBLZnIgQ",
                 "CAACAgIAAxkBAAEDP1phis_1JHdopkMzEgYe-DhGIy8E0gACbwEAAuB5UgeYDk7MrXDi7yIE",
                 "CAACAgIAAxkBAAEDP1xhitAMpKsPyvuW35jXImZ9pltxuQACHQEAAjDUnRGhYZw-05wbTyIE",
                 "CAACAgIAAxkBAAEDP15hitAnMb6g75Hpe-F_NWCkTvQ3fQACNAADr8ZRGr2WC4V16TqzIgQ",
                 "CAACAgIAAxkBAAEDP2BhitA4UnaNhXY7TRUx6A4aGi5r-wACDAADkP2aFZ9oJ0jCaOrRIgQ",
                 "CAACAgIAAxkBAAEDP2JhitBZXQABSRnv90t-gzZfZ9Rk8s4AAlgAA8A2TxP92B9p4gJXuyIE"
                 ]
sadstickers = ["CAACAgQAAxkBAAEDP2RhitB0LRhD5hQpXRIGgxp_gs3fxAACJBAAAswdmwzFk26zIhbF_yIE",
               "CAACAgIAAxkBAAEDP2lhitCeqU1CVEo15rPoEa6olV6sDAACRw4AAhFwoUqPrBZNBIPa2yIE",
               "CAACAgIAAxkBAAEDP2phitCr_hFaJyhH1CeILSa-8vQY5QACUwMAAuB5UgfYeklgfRKsiCIE",
               "CAACAgIAAxkBAAEDP3BhitDxUOFRhsTzEhbdSx0ow_ys0gACUw8AAkcG-EsYhXwrKl3SnCIE",
               "CAACAgIAAxkBAAEDP3JhitECpJoXGy56A6XRhgmlej-9kQAC3gADMNSdEYG5ydbBAytAIgQ",
               "CAACAgQAAxkBAAEDP3RhitEJoRWmgUZWMBDLRfB6A1ED6AACYhEAAswdmwytUMTpt2oDkSIE"
               ]


def get_name(message):  # –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏
    global name
    name = message.text
    if name.isnumeric():
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")
        bot.register_next_step_handler(message, get_name)
    else:
        bot.send_message(message.from_user.id, "–í–∞—à–∞ —Ñ–∞–º–∏–ª–∏—è:")
        bot.register_next_step_handler(message, get_surname)


def get_surname(message):  # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏
    global surname
    surname = message.text
    if surname.isnumeric():
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")
        bot.register_next_step_handler(message, get_surname)
    else:
        bot.send_message(message.from_user.id, "–í–∞—à–µ –æ—Ç—á–µ—Å—Ç–≤–æ:")
        bot.register_next_step_handler(message, get_middlename)


def get_middlename(message):  # –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—á–µ—Å—Ç–≤–∞
    global middlename
    middlename = message.text
    if middlename.isnumeric():
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")
        bot.register_next_step_handler(message, get_middlename)
    else:
        bot.send_message(message.from_user.id, "–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç:")
        bot.register_next_step_handler(message, get_age)


def get_age(message):  # –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –≤–≤–µ–¥–µ–Ω —Ü–∏—Ñ—Ä–∞–º–∏
    global age
    try:
        if 0 < int(message.text) < 200:
            age = int(message.text)
            check_information(message)
        else:
            bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")
            bot.register_next_step_handler(message, get_age)
    except Exception:
        bot.send_message(message.from_user.id, "–¶–∏—Ñ—Ä–∞–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")
        bot.register_next_step_handler(message, get_age)


def check_information(message):  # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ, –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item_yes = types.KeyboardButton("–î–∞")
    item_no = types.KeyboardButton("–ù–µ—Ç")
    markup.add(item_yes)
    markup.add(item_no)
    if age % 10 == 1 and age % 100 != 11:
        bot.send_message(message.from_user.id, surname + " " + name + " " + middlename + ".\n" + str(
            age) + " –≥–æ–¥." + "\n\n" + "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞?", reply_markup=markup)
    elif (age % 10 == 2 or age % 10 == 3 or age % 10 == 4) and age % 100 != 12 and age % 100 != 13 and age % 100 != 14:
        bot.send_message(message.from_user.id, surname + " " + name + " " + middlename + ".\n" + str(
            age) + " –≥–æ–¥–∞." + "\n\n" + "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞?", reply_markup=markup)
    else:
        bot.send_message(message.from_user.id, surname + " " + name + " " + middlename + ".\n" + str(
            age) + " –ª–µ—Ç." + "\n\n" + "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞?", reply_markup=markup)
    bot.register_next_step_handler(message, check_reaction)


@bot.message_handler(content_types="text")  # —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —Ç–µ–∫—Å—Ç —Å –∫–Ω–æ–ø–æ–∫ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏
def check_reaction(message):
    if message.text.lower() == "–¥–∞":
        bot.send_message(message.from_user.id, "–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ!", reply_markup=types.ReplyKeyboardRemove(),
                         parse_mode="Markdown")
    elif message.text.lower() == "–Ω–µ—Ç":
        bot.send_message(message.from_user.id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /reg, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.",
                         reply_markup=types.ReplyKeyboardRemove(), parse_mode="Markdown")


bot.polling(none_stop=True, interval=0)  # –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–æ—Ç–µ
